# Generated by Django 3.0.5 on 2020-05-02 00:59

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = False

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='description')),
                ('category', models.CharField(max_length=200, verbose_name='category')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_inventaire.element_set+', to='contenttypes.ContentType')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=200, verbose_name='description')),
                ('recording_date', models.DateField(auto_now_add=True, verbose_name='Recording date')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='description')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mindkeepr.Location')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='BorrowEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Event')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('scheduled_return_date', models.DateField(verbose_name='Scheduled return date')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            bases=('Mindkeepr.event',),
        ),
        migrations.CreateModel(
            name='BuyEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Event')),
                ('price', models.FloatField(verbose_name='Price')),
                ('supplier', models.CharField(blank=True, max_length=50, null=True, verbose_name='description')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
            ],
            bases=('Mindkeepr.event',),
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Element')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('Mindkeepr.element',),
        ),
        migrations.CreateModel(
            name='ConsumeEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Event')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
            ],
            bases=('Mindkeepr.event',),
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Element')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('Mindkeepr.element',),
        ),
        migrations.CreateModel(
            name='MaintenanceEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Event')),
                ('is_done', models.BooleanField(verbose_name='Is completed ?')),
                ('scheduled_date', models.DateField(blank=True, null=True, verbose_name='Scheduled execution date')),
            ],
            bases=('Mindkeepr.event',),
        ),
        migrations.CreateModel(
            name='ReturnEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Event')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Name')),
            ],
            bases=('Mindkeepr.event',),
        ),
        migrations.CreateModel(
            name='SellEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Event')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('price', models.FloatField(verbose_name='Price')),
            ],
            bases=('Mindkeepr.event',),
        ),
        migrations.CreateModel(
            name='StockRepartition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('status', models.CharField(choices=[('FREE', 'Free')], max_length=200, verbose_name='Status')),
                ('element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_repartitions', to='Mindkeepr.Element')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_repartitions', to='Mindkeepr.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('value', models.CharField(blank=True, max_length=200, null=True, verbose_name='value')),
                ('element_attached', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Mindkeepr.Element')),
            ],
        ),
        migrations.CreateModel(
            name='UseEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Mindkeepr.Event')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='use_history', to='Mindkeepr.Element')),
                ('location_destination', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='origin_destination_for_use_event', to='Mindkeepr.Location')),
                ('location_source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mindkeepr.Location')),
            ],
            bases=('Mindkeepr.event',),
        ),
        migrations.AddConstraint(
            model_name='stockrepartition',
            constraint=models.UniqueConstraint(fields=('element', 'location', 'status'), name='Unique set of location, status and element'),
        ),
        migrations.AddField(
            model_name='sellevent',
            name='element',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sell_history', to='Mindkeepr.Element'),
        ),
        migrations.AddField(
            model_name='sellevent',
            name='location_source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mindkeepr.Location'),
        ),
        migrations.AddField(
            model_name='returnevent',
            name='borrow_associated',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='return_event', to='Mindkeepr.BorrowEvent'),
        ),
        migrations.AddField(
            model_name='returnevent',
            name='location_destination',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mindkeepr.Location'),
        ),
        migrations.AddField(
            model_name='maintenanceevent',
            name='machine',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_history', to='Mindkeepr.Machine'),
        ),
        migrations.AddField(
            model_name='consumeevent',
            name='element',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consume_history', to='Mindkeepr.Element'),
        ),
        migrations.AddField(
            model_name='consumeevent',
            name='location_source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mindkeepr.Location'),
        ),
        migrations.AddField(
            model_name='buyevent',
            name='element',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buy_history', to='Mindkeepr.Element'),
        ),
        migrations.AddField(
            model_name='buyevent',
            name='location_destination',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mindkeepr.Location'),
        ),
        migrations.AddField(
            model_name='borrowevent',
            name='element',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='borrow_history', to='Mindkeepr.Element'),
        ),
        migrations.AddField(
            model_name='borrowevent',
            name='location_source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Mindkeepr.Location'),
        ),
    ]
